<?xml version="1.0" encoding="UTF-8"?>


<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:beans="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <beans:import resource="context.xml"/>
    <bean id="defragmenter" class="com.nimbits.server.defrag.Defragmenter"/>
    <bean id="valueTask" class="com.nimbits.server.process.task.ValueTask"/>
    <bean id="dataProcessor" class="com.nimbits.server.data.DataProcessor"/>
    <bean id="chartHelper" class="com.nimbits.server.chart.ChartHelper"/>
    <bean id="nimbitsCache" class="com.nimbits.server.transaction.cache.NimbitsCacheImpl"/>

    <bean id="userService" class="com.nimbits.server.transaction.user.service.UserServiceImpl"/>

    <bean id="entityService" class="com.nimbits.server.transaction.entity.EntityServiceImpl"/>


    <bean id="settingsService" class="com.nimbits.server.transaction.settings.SettingsServiceImpl"/>


    <bean id="settingsDao" class="com.nimbits.server.transaction.settings.SettingsDaoImpl">


        <property name="persistenceManagerFactory" ref="pmf"/>
    </bean>
    <bean id="emailService" class="com.nimbits.server.communication.mail.EmailServiceImpl"/>

    <bean id="blobStore" class="com.nimbits.server.io.BlobStoreImpl">

    </bean>

    <bean id="storageIO" class="com.nimbits.server.io.StorageIOImpl">

    </bean>
    <bean id="entityDao" class="com.nimbits.server.transaction.entity.dao.EntityDaoImpl">
        <property name="persistenceManagerFactory" ref="pmf"/>
    </bean>

    <bean id="userDao" class="com.nimbits.server.transaction.user.dao.UserDaoImpl">
        <property name="persistenceManagerFactory" ref="pmf"/>
    </bean>

    <bean id="datastoreProvider" class="com.nimbits.server.transaction.DatastoreProvider">
        <property name="persistenceManagerFactory" ref="pmf"/>
    </bean>


    <bean id="recursionValidation" class="com.nimbits.server.orm.validation.RecursionValidation"/>
    <bean id="valueService" class="com.nimbits.server.transaction.value.service.ValueServiceImpl"/>


    <bean id="calculationService" class="com.nimbits.server.transaction.calculation.CalculationServiceImpl"/>
    <bean id="summaryService" class="com.nimbits.server.transaction.summary.SummaryServiceImpl"/>
    <bean id="syncService" class="com.nimbits.server.transaction.sync.SyncServiceImpl"/>
    <bean id="subscriptionService" class="com.nimbits.server.transaction.subscription.SubscriptionServiceImpl"/>


    <bean id="xmppService" class="com.nimbits.server.communication.xmpp.XmppServiceImpl"/>

    <bean id="taskService" name="taskService" class="com.nimbits.server.process.task.TaskServiceImpl"/>


    <bean id="getActions" name="getActions" class="com.nimbits.server.api.v3.actions.GetActions"/>


    <bean id="stringEncryption" class="com.nimbits.server.secure.StringEncryption"/>
    <bean id="serverInfo" class="com.nimbits.server.system.ServerInfo"/>

    <bean id="pmf" class="org.springframework.orm.jdo.LocalPersistenceManagerFactoryBean">
        <property name="jdoProperties">
            <props>
                <prop key="javax.jdo.PersistenceManagerFactoryClass">
                    org.datanucleus.api.jdo.JDOPersistenceManagerFactory
                </prop>
                <prop key="javax.jdo.option.ConnectionURL">
                    jdbc:h2:./database/db2;MV_STORE=FALSE;MVCC=FALSE;;FILE_LOCK=NO
                </prop>
                <prop key="javax.jdo.option.ConnectionUserName">sa</prop>
                <prop key="javax.jdo.option.ConnectionPassword"></prop>
                <prop key="javax.jdo.option.ConnectionDriverName">org.h2.Driver</prop>
                <prop key="org.jpox.autoCreateSchema">true</prop>
                <!--<prop key="datanucleus.schema.autoCreateAll">true</prop>-->
                <prop key="org.jpox.identifier.case">PreserveCase</prop>
                <prop key="datanucleus.autoCreateTables">true</prop>
                <prop key="datanucleus.autoCreateColumns">true</prop>
                <!--<prop key="datanucleus.schema.autoCreateColumns">true</prop>-->
            </props>
        </property>
    </bean>


</beans>